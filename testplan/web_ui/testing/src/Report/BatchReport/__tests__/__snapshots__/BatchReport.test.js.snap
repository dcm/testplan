// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BatchReport loads a more complex report and autoselects entries 1`] = `
<div
  className="batchReport_3hmsj"
>
  <Toolbar
    handleNavFilter={[Function]}
    report={
      Object {
        "category": "testplan",
        "entries": Array [
          Object {
            "category": "multitest",
            "description": null,
            "entries": Array [
              Object {
                "category": "testsuite",
                "description": null,
                "entries": Array [
                  Object {
                    "category": "testcase",
                    "description": null,
                    "entries": Array [
                      Object {
                        "category": "DEFAULT",
                        "description": "passing equality",
                        "first": 1,
                        "label": "==",
                        "line_no": 24,
                        "machine_time": "2018-10-15T15:30:11.010098+00:00",
                        "meta_type": "assertion",
                        "passed": true,
                        "second": 1,
                        "type": "Equal",
                        "utc_time": "2018-10-15T14:30:11.010094+00:00",
                      },
                    ],
                    "logs": Array [],
                    "name": "test_equality_passing",
                    "name_type_index": Set {
                      "test_equality_passing|testcase",
                      "AlphaSuite|testsuite",
                      "Primary|multitest",
                      "Sample Testplan|testplan",
                    },
                    "status": "passed",
                    "status_override": null,
                    "tags": Object {
                      "colour": Array [
                        "white",
                      ],
                      "simple": Array [
                        "server",
                      ],
                    },
                    "tags_index": Object {
                      "colour": Array [
                        "white",
                      ],
                      "simple": Array [
                        "server",
                      ],
                    },
                    "timer": Object {
                      "run": Object {
                        "end": "2018-10-15T14:30:11.132214+00:00",
                        "start": "2018-10-15T14:30:11.010072+00:00",
                      },
                    },
                    "type": "TestCaseReport",
                    "uid": "736706ef-ba65-475d-96c5-f2855f431028",
                  },
                  Object {
                    "category": "testcase",
                    "description": null,
                    "entries": Array [
                      Object {
                        "category": "DEFAULT",
                        "description": "passing equality",
                        "first": 1,
                        "label": "==",
                        "line_no": 24,
                        "machine_time": "2018-10-15T15:30:11.510098+00:00",
                        "meta_type": "assertion",
                        "passed": true,
                        "second": 1,
                        "type": "Equal",
                        "utc_time": "2018-10-15T14:30:11.510094+00:00",
                      },
                    ],
                    "logs": Array [],
                    "name": "test_equality_passing2",
                    "name_type_index": Set {
                      "test_equality_passing2|testcase",
                      "AlphaSuite|testsuite",
                      "Primary|multitest",
                      "Sample Testplan|testplan",
                    },
                    "status": "failed",
                    "status_override": null,
                    "tags": Object {
                      "simple": Array [
                        "server",
                      ],
                    },
                    "tags_index": Object {
                      "simple": Array [
                        "server",
                      ],
                    },
                    "timer": Object {
                      "run": Object {
                        "end": "2018-10-15T14:30:11.632214+00:00",
                        "start": "2018-10-15T14:30:11.510072+00:00",
                      },
                    },
                    "type": "TestCaseReport",
                    "uid": "78686a4d-7b94-4ae6-ab50-d9960a7fb714",
                  },
                ],
                "logs": Array [],
                "name": "AlphaSuite",
                "name_type_index": Set {
                  "AlphaSuite|testsuite",
                  "Primary|multitest",
                  "Sample Testplan|testplan",
                  "test_equality_passing|testcase",
                  "test_equality_passing2|testcase",
                },
                "status": "failed",
                "status_override": null,
                "tags": Object {
                  "simple": Array [
                    "server",
                  ],
                },
                "tags_index": Object {
                  "colour": Array [
                    "white",
                  ],
                  "simple": Array [
                    "server",
                  ],
                },
                "timer": Object {
                  "run": Object {
                    "end": "2018-10-15T14:30:11.158224+00:00",
                    "start": "2018-10-15T14:30:11.009872+00:00",
                  },
                },
                "type": "TestGroupReport",
                "uid": "cb144b10-bdb0-44d3-9170-d8016dd19ee7",
              },
              Object {
                "category": "testsuite",
                "description": null,
                "entries": Array [
                  Object {
                    "category": "testcase",
                    "description": null,
                    "entries": Array [
                      Object {
                        "category": "DEFAULT",
                        "description": "passing equality",
                        "first": 1,
                        "label": "==",
                        "line_no": 24,
                        "machine_time": "2018-10-15T15:30:11.010098+00:00",
                        "meta_type": "assertion",
                        "passed": true,
                        "second": 1,
                        "type": "Equal",
                        "utc_time": "2018-10-15T14:30:11.010094+00:00",
                      },
                    ],
                    "logs": Array [],
                    "name": "test_equality_passing",
                    "name_type_index": Set {
                      "test_equality_passing|testcase",
                      "BetaSuite|testsuite",
                      "Primary|multitest",
                      "Sample Testplan|testplan",
                    },
                    "status": "passed",
                    "status_override": null,
                    "tags": Object {
                      "simple": Array [
                        "server",
                        "client",
                      ],
                    },
                    "tags_index": Object {
                      "simple": Array [
                        "server",
                        "client",
                      ],
                    },
                    "timer": Object {
                      "run": Object {
                        "end": "2018-10-15T14:30:11.132214+00:00",
                        "start": "2018-10-15T14:30:11.010072+00:00",
                      },
                    },
                    "type": "TestCaseReport",
                    "uid": "8865a23d-1823-4c8d-ab37-58d24fc8ac05",
                  },
                ],
                "logs": Array [],
                "name": "BetaSuite",
                "name_type_index": Set {
                  "BetaSuite|testsuite",
                  "Primary|multitest",
                  "Sample Testplan|testplan",
                  "test_equality_passing|testcase",
                },
                "status": "passed",
                "status_override": null,
                "tags": Object {
                  "simple": Array [
                    "server",
                    "client",
                  ],
                },
                "tags_index": Object {
                  "simple": Array [
                    "server",
                    "client",
                  ],
                },
                "timer": Object {
                  "run": Object {
                    "end": "2018-10-15T14:30:11.158224+00:00",
                    "start": "2018-10-15T14:30:11.009872+00:00",
                  },
                },
                "type": "TestGroupReport",
                "uid": "6fc5c008-4d1a-454e-80b6-74bdc9bca49e",
              },
            ],
            "logs": Array [],
            "name": "Primary",
            "name_type_index": Set {
              "Primary|multitest",
              "Sample Testplan|testplan",
              "AlphaSuite|testsuite",
              "test_equality_passing|testcase",
              "test_equality_passing2|testcase",
              "BetaSuite|testsuite",
            },
            "status": "failed",
            "status_override": null,
            "tags": Object {
              "simple": Array [
                "server",
              ],
            },
            "tags_index": Object {
              "colour": Array [
                "white",
              ],
              "simple": Array [
                "server",
                "client",
              ],
            },
            "timer": Object {
              "run": Object {
                "end": "2018-10-15T14:30:11.159661+00:00",
                "start": "2018-10-15T14:30:11.009705+00:00",
              },
            },
            "type": "TestGroupReport",
            "uid": "21739167-b30f-4c13-a315-ef6ae52fd1f7",
          },
          Object {
            "category": "multitest",
            "description": null,
            "entries": Array [
              Object {
                "category": "testsuite",
                "description": null,
                "entries": Array [
                  Object {
                    "category": "testcase",
                    "description": null,
                    "entries": Array [
                      Object {
                        "category": "DEFAULT",
                        "description": "passing equality",
                        "first": 1,
                        "label": "==",
                        "line_no": 24,
                        "machine_time": "2018-10-15T15:30:12.010098+00:00",
                        "meta_type": "assertion",
                        "passed": true,
                        "second": 1,
                        "type": "Equal",
                        "utc_time": "2018-10-15T14:30:12.010094+00:00",
                      },
                    ],
                    "logs": Array [],
                    "name": "test_equality_passing",
                    "name_type_index": Set {
                      "test_equality_passing|testcase",
                      "GammaSuite|testsuite",
                      "Secondary|multitest",
                      "Sample Testplan|testplan",
                    },
                    "status": "passed",
                    "status_override": null,
                    "tags": Object {},
                    "tags_index": Object {},
                    "timer": Object {
                      "run": Object {
                        "end": "2018-10-15T14:30:12.132214+00:00",
                        "start": "2018-10-15T14:30:12.010072+00:00",
                      },
                    },
                    "type": "TestCaseReport",
                    "uid": "f73bd6ea-d378-437b-a5db-00d9e427f36a",
                  },
                ],
                "logs": Array [],
                "name": "GammaSuite",
                "name_type_index": Set {
                  "GammaSuite|testsuite",
                  "Secondary|multitest",
                  "Sample Testplan|testplan",
                  "test_equality_passing|testcase",
                },
                "status": "passed",
                "status_override": null,
                "tags": Object {},
                "tags_index": Object {},
                "timer": Object {
                  "run": Object {
                    "end": "2018-10-15T14:30:12.158224+00:00",
                    "start": "2018-10-15T14:30:12.009872+00:00",
                  },
                },
                "type": "TestGroupReport",
                "uid": "08d4c671-d55d-49d4-96ba-dc654d12be26",
              },
            ],
            "logs": Array [],
            "name": "Secondary",
            "name_type_index": Set {
              "Secondary|multitest",
              "Sample Testplan|testplan",
              "GammaSuite|testsuite",
              "test_equality_passing|testcase",
            },
            "status": "passed",
            "status_override": null,
            "tags": Object {},
            "tags_index": Object {},
            "timer": Object {
              "run": Object {
                "end": "2018-10-15T14:30:12.159661+00:00",
                "start": "2018-10-15T14:30:12.009705+00:00",
              },
            },
            "type": "TestGroupReport",
            "uid": "8c3c7e6b-48e8-40cd-86db-8c8aed2592c8",
          },
        ],
        "meta": Object {},
        "name": "Sample Testplan",
        "name_type_index": Set {
          "Sample Testplan|testplan",
          "Primary|multitest",
          "AlphaSuite|testsuite",
          "test_equality_passing|testcase",
          "test_equality_passing2|testcase",
          "BetaSuite|testsuite",
          "Secondary|multitest",
          "GammaSuite|testsuite",
        },
        "status": "failed",
        "status_override": null,
        "tags_index": Object {
          "colour": Array [
            "white",
          ],
          "simple": Array [
            "server",
            "client",
          ],
        },
        "timer": Object {
          "run": Object {
            "end": "2018-10-15T14:30:11.296158+00:00",
            "start": "2018-10-15T14:30:10.998071+00:00",
          },
        },
        "uid": "520a92e4-325e-4077-93e6-55d7091a3f83",
      }
    }
    status="failed"
    updateEmptyDisplayFunc={[Function]}
    updateFilterFunc={[Function]}
    updateTagsDisplayFunc={[Function]}
  />
  <Nav
    displayEmpty={true}
    displayTags={false}
    filter={null}
    handleNavClick={[Function]}
    report={
      Object {
        "category": "testplan",
        "entries": Array [
          Object {
            "category": "multitest",
            "description": null,
            "entries": Array [
              Object {
                "category": "testsuite",
                "description": null,
                "entries": Array [
                  Object {
                    "category": "testcase",
                    "description": null,
                    "entries": Array [
                      Object {
                        "category": "DEFAULT",
                        "description": "passing equality",
                        "first": 1,
                        "label": "==",
                        "line_no": 24,
                        "machine_time": "2018-10-15T15:30:11.010098+00:00",
                        "meta_type": "assertion",
                        "passed": true,
                        "second": 1,
                        "type": "Equal",
                        "utc_time": "2018-10-15T14:30:11.010094+00:00",
                      },
                    ],
                    "logs": Array [],
                    "name": "test_equality_passing",
                    "name_type_index": Set {
                      "test_equality_passing|testcase",
                      "AlphaSuite|testsuite",
                      "Primary|multitest",
                      "Sample Testplan|testplan",
                    },
                    "status": "passed",
                    "status_override": null,
                    "tags": Object {
                      "colour": Array [
                        "white",
                      ],
                      "simple": Array [
                        "server",
                      ],
                    },
                    "tags_index": Object {
                      "colour": Array [
                        "white",
                      ],
                      "simple": Array [
                        "server",
                      ],
                    },
                    "timer": Object {
                      "run": Object {
                        "end": "2018-10-15T14:30:11.132214+00:00",
                        "start": "2018-10-15T14:30:11.010072+00:00",
                      },
                    },
                    "type": "TestCaseReport",
                    "uid": "736706ef-ba65-475d-96c5-f2855f431028",
                  },
                  Object {
                    "category": "testcase",
                    "description": null,
                    "entries": Array [
                      Object {
                        "category": "DEFAULT",
                        "description": "passing equality",
                        "first": 1,
                        "label": "==",
                        "line_no": 24,
                        "machine_time": "2018-10-15T15:30:11.510098+00:00",
                        "meta_type": "assertion",
                        "passed": true,
                        "second": 1,
                        "type": "Equal",
                        "utc_time": "2018-10-15T14:30:11.510094+00:00",
                      },
                    ],
                    "logs": Array [],
                    "name": "test_equality_passing2",
                    "name_type_index": Set {
                      "test_equality_passing2|testcase",
                      "AlphaSuite|testsuite",
                      "Primary|multitest",
                      "Sample Testplan|testplan",
                    },
                    "status": "failed",
                    "status_override": null,
                    "tags": Object {
                      "simple": Array [
                        "server",
                      ],
                    },
                    "tags_index": Object {
                      "simple": Array [
                        "server",
                      ],
                    },
                    "timer": Object {
                      "run": Object {
                        "end": "2018-10-15T14:30:11.632214+00:00",
                        "start": "2018-10-15T14:30:11.510072+00:00",
                      },
                    },
                    "type": "TestCaseReport",
                    "uid": "78686a4d-7b94-4ae6-ab50-d9960a7fb714",
                  },
                ],
                "logs": Array [],
                "name": "AlphaSuite",
                "name_type_index": Set {
                  "AlphaSuite|testsuite",
                  "Primary|multitest",
                  "Sample Testplan|testplan",
                  "test_equality_passing|testcase",
                  "test_equality_passing2|testcase",
                },
                "status": "failed",
                "status_override": null,
                "tags": Object {
                  "simple": Array [
                    "server",
                  ],
                },
                "tags_index": Object {
                  "colour": Array [
                    "white",
                  ],
                  "simple": Array [
                    "server",
                  ],
                },
                "timer": Object {
                  "run": Object {
                    "end": "2018-10-15T14:30:11.158224+00:00",
                    "start": "2018-10-15T14:30:11.009872+00:00",
                  },
                },
                "type": "TestGroupReport",
                "uid": "cb144b10-bdb0-44d3-9170-d8016dd19ee7",
              },
              Object {
                "category": "testsuite",
                "description": null,
                "entries": Array [
                  Object {
                    "category": "testcase",
                    "description": null,
                    "entries": Array [
                      Object {
                        "category": "DEFAULT",
                        "description": "passing equality",
                        "first": 1,
                        "label": "==",
                        "line_no": 24,
                        "machine_time": "2018-10-15T15:30:11.010098+00:00",
                        "meta_type": "assertion",
                        "passed": true,
                        "second": 1,
                        "type": "Equal",
                        "utc_time": "2018-10-15T14:30:11.010094+00:00",
                      },
                    ],
                    "logs": Array [],
                    "name": "test_equality_passing",
                    "name_type_index": Set {
                      "test_equality_passing|testcase",
                      "BetaSuite|testsuite",
                      "Primary|multitest",
                      "Sample Testplan|testplan",
                    },
                    "status": "passed",
                    "status_override": null,
                    "tags": Object {
                      "simple": Array [
                        "server",
                        "client",
                      ],
                    },
                    "tags_index": Object {
                      "simple": Array [
                        "server",
                        "client",
                      ],
                    },
                    "timer": Object {
                      "run": Object {
                        "end": "2018-10-15T14:30:11.132214+00:00",
                        "start": "2018-10-15T14:30:11.010072+00:00",
                      },
                    },
                    "type": "TestCaseReport",
                    "uid": "8865a23d-1823-4c8d-ab37-58d24fc8ac05",
                  },
                ],
                "logs": Array [],
                "name": "BetaSuite",
                "name_type_index": Set {
                  "BetaSuite|testsuite",
                  "Primary|multitest",
                  "Sample Testplan|testplan",
                  "test_equality_passing|testcase",
                },
                "status": "passed",
                "status_override": null,
                "tags": Object {
                  "simple": Array [
                    "server",
                    "client",
                  ],
                },
                "tags_index": Object {
                  "simple": Array [
                    "server",
                    "client",
                  ],
                },
                "timer": Object {
                  "run": Object {
                    "end": "2018-10-15T14:30:11.158224+00:00",
                    "start": "2018-10-15T14:30:11.009872+00:00",
                  },
                },
                "type": "TestGroupReport",
                "uid": "6fc5c008-4d1a-454e-80b6-74bdc9bca49e",
              },
            ],
            "logs": Array [],
            "name": "Primary",
            "name_type_index": Set {
              "Primary|multitest",
              "Sample Testplan|testplan",
              "AlphaSuite|testsuite",
              "test_equality_passing|testcase",
              "test_equality_passing2|testcase",
              "BetaSuite|testsuite",
            },
            "status": "failed",
            "status_override": null,
            "tags": Object {
              "simple": Array [
                "server",
              ],
            },
            "tags_index": Object {
              "colour": Array [
                "white",
              ],
              "simple": Array [
                "server",
                "client",
              ],
            },
            "timer": Object {
              "run": Object {
                "end": "2018-10-15T14:30:11.159661+00:00",
                "start": "2018-10-15T14:30:11.009705+00:00",
              },
            },
            "type": "TestGroupReport",
            "uid": "21739167-b30f-4c13-a315-ef6ae52fd1f7",
          },
          Object {
            "category": "multitest",
            "description": null,
            "entries": Array [
              Object {
                "category": "testsuite",
                "description": null,
                "entries": Array [
                  Object {
                    "category": "testcase",
                    "description": null,
                    "entries": Array [
                      Object {
                        "category": "DEFAULT",
                        "description": "passing equality",
                        "first": 1,
                        "label": "==",
                        "line_no": 24,
                        "machine_time": "2018-10-15T15:30:12.010098+00:00",
                        "meta_type": "assertion",
                        "passed": true,
                        "second": 1,
                        "type": "Equal",
                        "utc_time": "2018-10-15T14:30:12.010094+00:00",
                      },
                    ],
                    "logs": Array [],
                    "name": "test_equality_passing",
                    "name_type_index": Set {
                      "test_equality_passing|testcase",
                      "GammaSuite|testsuite",
                      "Secondary|multitest",
                      "Sample Testplan|testplan",
                    },
                    "status": "passed",
                    "status_override": null,
                    "tags": Object {},
                    "tags_index": Object {},
                    "timer": Object {
                      "run": Object {
                        "end": "2018-10-15T14:30:12.132214+00:00",
                        "start": "2018-10-15T14:30:12.010072+00:00",
                      },
                    },
                    "type": "TestCaseReport",
                    "uid": "f73bd6ea-d378-437b-a5db-00d9e427f36a",
                  },
                ],
                "logs": Array [],
                "name": "GammaSuite",
                "name_type_index": Set {
                  "GammaSuite|testsuite",
                  "Secondary|multitest",
                  "Sample Testplan|testplan",
                  "test_equality_passing|testcase",
                },
                "status": "passed",
                "status_override": null,
                "tags": Object {},
                "tags_index": Object {},
                "timer": Object {
                  "run": Object {
                    "end": "2018-10-15T14:30:12.158224+00:00",
                    "start": "2018-10-15T14:30:12.009872+00:00",
                  },
                },
                "type": "TestGroupReport",
                "uid": "08d4c671-d55d-49d4-96ba-dc654d12be26",
              },
            ],
            "logs": Array [],
            "name": "Secondary",
            "name_type_index": Set {
              "Secondary|multitest",
              "Sample Testplan|testplan",
              "GammaSuite|testsuite",
              "test_equality_passing|testcase",
            },
            "status": "passed",
            "status_override": null,
            "tags": Object {},
            "tags_index": Object {},
            "timer": Object {
              "run": Object {
                "end": "2018-10-15T14:30:12.159661+00:00",
                "start": "2018-10-15T14:30:12.009705+00:00",
              },
            },
            "type": "TestGroupReport",
            "uid": "8c3c7e6b-48e8-40cd-86db-8c8aed2592c8",
          },
        ],
        "meta": Object {},
        "name": "Sample Testplan",
        "name_type_index": Set {
          "Sample Testplan|testplan",
          "Primary|multitest",
          "AlphaSuite|testsuite",
          "test_equality_passing|testcase",
          "test_equality_passing2|testcase",
          "BetaSuite|testsuite",
          "Secondary|multitest",
          "GammaSuite|testsuite",
        },
        "status": "failed",
        "status_override": null,
        "tags_index": Object {
          "colour": Array [
            "white",
          ],
          "simple": Array [
            "server",
            "client",
          ],
        },
        "timer": Object {
          "run": Object {
            "end": "2018-10-15T14:30:11.296158+00:00",
            "start": "2018-10-15T14:30:10.998071+00:00",
          },
        },
        "uid": "520a92e4-325e-4077-93e6-55d7091a3f83",
      }
    }
    selected={
      Array [
        Object {
          "category": "testplan",
          "entries": Array [
            Object {
              "category": "multitest",
              "description": null,
              "entries": Array [
                Object {
                  "category": "testsuite",
                  "description": null,
                  "entries": Array [
                    Object {
                      "category": "testcase",
                      "description": null,
                      "entries": Array [
                        Object {
                          "category": "DEFAULT",
                          "description": "passing equality",
                          "first": 1,
                          "label": "==",
                          "line_no": 24,
                          "machine_time": "2018-10-15T15:30:11.010098+00:00",
                          "meta_type": "assertion",
                          "passed": true,
                          "second": 1,
                          "type": "Equal",
                          "utc_time": "2018-10-15T14:30:11.010094+00:00",
                        },
                      ],
                      "logs": Array [],
                      "name": "test_equality_passing",
                      "name_type_index": Set {
                        "test_equality_passing|testcase",
                        "AlphaSuite|testsuite",
                        "Primary|multitest",
                        "Sample Testplan|testplan",
                      },
                      "status": "passed",
                      "status_override": null,
                      "tags": Object {
                        "colour": Array [
                          "white",
                        ],
                        "simple": Array [
                          "server",
                        ],
                      },
                      "tags_index": Object {
                        "colour": Array [
                          "white",
                        ],
                        "simple": Array [
                          "server",
                        ],
                      },
                      "timer": Object {
                        "run": Object {
                          "end": "2018-10-15T14:30:11.132214+00:00",
                          "start": "2018-10-15T14:30:11.010072+00:00",
                        },
                      },
                      "type": "TestCaseReport",
                      "uid": "736706ef-ba65-475d-96c5-f2855f431028",
                    },
                    Object {
                      "category": "testcase",
                      "description": null,
                      "entries": Array [
                        Object {
                          "category": "DEFAULT",
                          "description": "passing equality",
                          "first": 1,
                          "label": "==",
                          "line_no": 24,
                          "machine_time": "2018-10-15T15:30:11.510098+00:00",
                          "meta_type": "assertion",
                          "passed": true,
                          "second": 1,
                          "type": "Equal",
                          "utc_time": "2018-10-15T14:30:11.510094+00:00",
                        },
                      ],
                      "logs": Array [],
                      "name": "test_equality_passing2",
                      "name_type_index": Set {
                        "test_equality_passing2|testcase",
                        "AlphaSuite|testsuite",
                        "Primary|multitest",
                        "Sample Testplan|testplan",
                      },
                      "status": "failed",
                      "status_override": null,
                      "tags": Object {
                        "simple": Array [
                          "server",
                        ],
                      },
                      "tags_index": Object {
                        "simple": Array [
                          "server",
                        ],
                      },
                      "timer": Object {
                        "run": Object {
                          "end": "2018-10-15T14:30:11.632214+00:00",
                          "start": "2018-10-15T14:30:11.510072+00:00",
                        },
                      },
                      "type": "TestCaseReport",
                      "uid": "78686a4d-7b94-4ae6-ab50-d9960a7fb714",
                    },
                  ],
                  "logs": Array [],
                  "name": "AlphaSuite",
                  "name_type_index": Set {
                    "AlphaSuite|testsuite",
                    "Primary|multitest",
                    "Sample Testplan|testplan",
                    "test_equality_passing|testcase",
                    "test_equality_passing2|testcase",
                  },
                  "status": "failed",
                  "status_override": null,
                  "tags": Object {
                    "simple": Array [
                      "server",
                    ],
                  },
                  "tags_index": Object {
                    "colour": Array [
                      "white",
                    ],
                    "simple": Array [
                      "server",
                    ],
                  },
                  "timer": Object {
                    "run": Object {
                      "end": "2018-10-15T14:30:11.158224+00:00",
                      "start": "2018-10-15T14:30:11.009872+00:00",
                    },
                  },
                  "type": "TestGroupReport",
                  "uid": "cb144b10-bdb0-44d3-9170-d8016dd19ee7",
                },
                Object {
                  "category": "testsuite",
                  "description": null,
                  "entries": Array [
                    Object {
                      "category": "testcase",
                      "description": null,
                      "entries": Array [
                        Object {
                          "category": "DEFAULT",
                          "description": "passing equality",
                          "first": 1,
                          "label": "==",
                          "line_no": 24,
                          "machine_time": "2018-10-15T15:30:11.010098+00:00",
                          "meta_type": "assertion",
                          "passed": true,
                          "second": 1,
                          "type": "Equal",
                          "utc_time": "2018-10-15T14:30:11.010094+00:00",
                        },
                      ],
                      "logs": Array [],
                      "name": "test_equality_passing",
                      "name_type_index": Set {
                        "test_equality_passing|testcase",
                        "BetaSuite|testsuite",
                        "Primary|multitest",
                        "Sample Testplan|testplan",
                      },
                      "status": "passed",
                      "status_override": null,
                      "tags": Object {
                        "simple": Array [
                          "server",
                          "client",
                        ],
                      },
                      "tags_index": Object {
                        "simple": Array [
                          "server",
                          "client",
                        ],
                      },
                      "timer": Object {
                        "run": Object {
                          "end": "2018-10-15T14:30:11.132214+00:00",
                          "start": "2018-10-15T14:30:11.010072+00:00",
                        },
                      },
                      "type": "TestCaseReport",
                      "uid": "8865a23d-1823-4c8d-ab37-58d24fc8ac05",
                    },
                  ],
                  "logs": Array [],
                  "name": "BetaSuite",
                  "name_type_index": Set {
                    "BetaSuite|testsuite",
                    "Primary|multitest",
                    "Sample Testplan|testplan",
                    "test_equality_passing|testcase",
                  },
                  "status": "passed",
                  "status_override": null,
                  "tags": Object {
                    "simple": Array [
                      "server",
                      "client",
                    ],
                  },
                  "tags_index": Object {
                    "simple": Array [
                      "server",
                      "client",
                    ],
                  },
                  "timer": Object {
                    "run": Object {
                      "end": "2018-10-15T14:30:11.158224+00:00",
                      "start": "2018-10-15T14:30:11.009872+00:00",
                    },
                  },
                  "type": "TestGroupReport",
                  "uid": "6fc5c008-4d1a-454e-80b6-74bdc9bca49e",
                },
              ],
              "logs": Array [],
              "name": "Primary",
              "name_type_index": Set {
                "Primary|multitest",
                "Sample Testplan|testplan",
                "AlphaSuite|testsuite",
                "test_equality_passing|testcase",
                "test_equality_passing2|testcase",
                "BetaSuite|testsuite",
              },
              "status": "failed",
              "status_override": null,
              "tags": Object {
                "simple": Array [
                  "server",
                ],
              },
              "tags_index": Object {
                "colour": Array [
                  "white",
                ],
                "simple": Array [
                  "server",
                  "client",
                ],
              },
              "timer": Object {
                "run": Object {
                  "end": "2018-10-15T14:30:11.159661+00:00",
                  "start": "2018-10-15T14:30:11.009705+00:00",
                },
              },
              "type": "TestGroupReport",
              "uid": "21739167-b30f-4c13-a315-ef6ae52fd1f7",
            },
            Object {
              "category": "multitest",
              "description": null,
              "entries": Array [
                Object {
                  "category": "testsuite",
                  "description": null,
                  "entries": Array [
                    Object {
                      "category": "testcase",
                      "description": null,
                      "entries": Array [
                        Object {
                          "category": "DEFAULT",
                          "description": "passing equality",
                          "first": 1,
                          "label": "==",
                          "line_no": 24,
                          "machine_time": "2018-10-15T15:30:12.010098+00:00",
                          "meta_type": "assertion",
                          "passed": true,
                          "second": 1,
                          "type": "Equal",
                          "utc_time": "2018-10-15T14:30:12.010094+00:00",
                        },
                      ],
                      "logs": Array [],
                      "name": "test_equality_passing",
                      "name_type_index": Set {
                        "test_equality_passing|testcase",
                        "GammaSuite|testsuite",
                        "Secondary|multitest",
                        "Sample Testplan|testplan",
                      },
                      "status": "passed",
                      "status_override": null,
                      "tags": Object {},
                      "tags_index": Object {},
                      "timer": Object {
                        "run": Object {
                          "end": "2018-10-15T14:30:12.132214+00:00",
                          "start": "2018-10-15T14:30:12.010072+00:00",
                        },
                      },
                      "type": "TestCaseReport",
                      "uid": "f73bd6ea-d378-437b-a5db-00d9e427f36a",
                    },
                  ],
                  "logs": Array [],
                  "name": "GammaSuite",
                  "name_type_index": Set {
                    "GammaSuite|testsuite",
                    "Secondary|multitest",
                    "Sample Testplan|testplan",
                    "test_equality_passing|testcase",
                  },
                  "status": "passed",
                  "status_override": null,
                  "tags": Object {},
                  "tags_index": Object {},
                  "timer": Object {
                    "run": Object {
                      "end": "2018-10-15T14:30:12.158224+00:00",
                      "start": "2018-10-15T14:30:12.009872+00:00",
                    },
                  },
                  "type": "TestGroupReport",
                  "uid": "08d4c671-d55d-49d4-96ba-dc654d12be26",
                },
              ],
              "logs": Array [],
              "name": "Secondary",
              "name_type_index": Set {
                "Secondary|multitest",
                "Sample Testplan|testplan",
                "GammaSuite|testsuite",
                "test_equality_passing|testcase",
              },
              "status": "passed",
              "status_override": null,
              "tags": Object {},
              "tags_index": Object {},
              "timer": Object {
                "run": Object {
                  "end": "2018-10-15T14:30:12.159661+00:00",
                  "start": "2018-10-15T14:30:12.009705+00:00",
                },
              },
              "type": "TestGroupReport",
              "uid": "8c3c7e6b-48e8-40cd-86db-8c8aed2592c8",
            },
          ],
          "meta": Object {},
          "name": "Sample Testplan",
          "name_type_index": Set {
            "Sample Testplan|testplan",
            "Primary|multitest",
            "AlphaSuite|testsuite",
            "test_equality_passing|testcase",
            "test_equality_passing2|testcase",
            "BetaSuite|testsuite",
            "Secondary|multitest",
            "GammaSuite|testsuite",
          },
          "status": "failed",
          "status_override": null,
          "tags_index": Object {
            "colour": Array [
              "white",
            ],
            "simple": Array [
              "server",
              "client",
            ],
          },
          "timer": Object {
            "run": Object {
              "end": "2018-10-15T14:30:11.296158+00:00",
              "start": "2018-10-15T14:30:10.998071+00:00",
            },
          },
          "uid": "520a92e4-325e-4077-93e6-55d7091a3f83",
        },
      ]
    }
  />
  <Message
    left={22}
    message="Please select an entry."
  />
</div>
`;

exports[`BatchReport loads a simple report and autoselects entries 1`] = `
<div
  className="batchReport_3hmsj"
>
  <Toolbar
    handleNavFilter={[Function]}
    report={
      Object {
        "category": "testplan",
        "entries": Array [
          Object {
            "category": "multitest",
            "description": null,
            "entries": Array [
              Object {
                "category": "testsuite",
                "description": null,
                "entries": Array [
                  Object {
                    "category": "testcase",
                    "description": null,
                    "entries": Array [
                      Object {
                        "category": "DEFAULT",
                        "description": "passing equality",
                        "first": 1,
                        "label": "==",
                        "line_no": 24,
                        "machine_time": "2018-10-15T15:30:11.010098+00:00",
                        "meta_type": "assertion",
                        "passed": true,
                        "second": 1,
                        "type": "Equal",
                        "utc_time": "2018-10-15T14:30:11.010094+00:00",
                      },
                    ],
                    "logs": Array [],
                    "name": "test_equality_passing",
                    "name_type_index": Set {
                      "test_equality_passing|testcase",
                      "AlphaSuite|testsuite",
                      "Primary|multitest",
                      "Sample Testplan|testplan",
                    },
                    "status": "passed",
                    "status_override": null,
                    "tags": Object {
                      "colour": Array [
                        "white",
                      ],
                      "simple": Array [
                        "server",
                      ],
                    },
                    "tags_index": Object {
                      "colour": Array [
                        "white",
                      ],
                      "simple": Array [
                        "server",
                      ],
                    },
                    "timer": Object {
                      "run": Object {
                        "end": "2018-10-15T14:30:11.132214+00:00",
                        "start": "2018-10-15T14:30:11.010072+00:00",
                      },
                    },
                    "type": "TestCaseReport",
                    "uid": "736706ef-ba65-475d-96c5-f2855f431028",
                  },
                ],
                "logs": Array [],
                "name": "AlphaSuite",
                "name_type_index": Set {
                  "AlphaSuite|testsuite",
                  "Primary|multitest",
                  "Sample Testplan|testplan",
                  "test_equality_passing|testcase",
                },
                "status": "failed",
                "status_override": null,
                "tags": Object {
                  "simple": Array [
                    "server",
                  ],
                },
                "tags_index": Object {
                  "colour": Array [
                    "white",
                  ],
                  "simple": Array [
                    "server",
                  ],
                },
                "timer": Object {
                  "run": Object {
                    "end": "2018-10-15T14:30:11.158224+00:00",
                    "start": "2018-10-15T14:30:11.009872+00:00",
                  },
                },
                "type": "TestGroupReport",
                "uid": "cb144b10-bdb0-44d3-9170-d8016dd19ee7",
              },
            ],
            "logs": Array [],
            "name": "Primary",
            "name_type_index": Set {
              "Primary|multitest",
              "Sample Testplan|testplan",
              "AlphaSuite|testsuite",
              "test_equality_passing|testcase",
            },
            "status": "failed",
            "status_override": null,
            "tags": Object {
              "simple": Array [
                "server",
              ],
            },
            "tags_index": Object {
              "colour": Array [
                "white",
              ],
              "simple": Array [
                "server",
              ],
            },
            "timer": Object {
              "run": Object {
                "end": "2018-10-15T14:30:11.159661+00:00",
                "start": "2018-10-15T14:30:11.009705+00:00",
              },
            },
            "type": "TestGroupReport",
            "uid": "21739167-b30f-4c13-a315-ef6ae52fd1f7",
          },
        ],
        "meta": Object {},
        "name": "Sample Testplan",
        "name_type_index": Set {
          "Sample Testplan|testplan",
          "Primary|multitest",
          "AlphaSuite|testsuite",
          "test_equality_passing|testcase",
        },
        "status": "failed",
        "status_override": null,
        "tags_index": Object {
          "colour": Array [
            "white",
          ],
          "simple": Array [
            "server",
          ],
        },
        "timer": Object {
          "run": Object {
            "end": "2018-10-15T14:30:11.296158+00:00",
            "start": "2018-10-15T14:30:10.998071+00:00",
          },
        },
        "uid": "520a92e4-325e-4077-93e6-55d7091a3f83",
      }
    }
    status="failed"
    updateEmptyDisplayFunc={[Function]}
    updateFilterFunc={[Function]}
    updateTagsDisplayFunc={[Function]}
  />
  <Nav
    displayEmpty={true}
    displayTags={false}
    filter={null}
    handleNavClick={[Function]}
    report={
      Object {
        "category": "testplan",
        "entries": Array [
          Object {
            "category": "multitest",
            "description": null,
            "entries": Array [
              Object {
                "category": "testsuite",
                "description": null,
                "entries": Array [
                  Object {
                    "category": "testcase",
                    "description": null,
                    "entries": Array [
                      Object {
                        "category": "DEFAULT",
                        "description": "passing equality",
                        "first": 1,
                        "label": "==",
                        "line_no": 24,
                        "machine_time": "2018-10-15T15:30:11.010098+00:00",
                        "meta_type": "assertion",
                        "passed": true,
                        "second": 1,
                        "type": "Equal",
                        "utc_time": "2018-10-15T14:30:11.010094+00:00",
                      },
                    ],
                    "logs": Array [],
                    "name": "test_equality_passing",
                    "name_type_index": Set {
                      "test_equality_passing|testcase",
                      "AlphaSuite|testsuite",
                      "Primary|multitest",
                      "Sample Testplan|testplan",
                    },
                    "status": "passed",
                    "status_override": null,
                    "tags": Object {
                      "colour": Array [
                        "white",
                      ],
                      "simple": Array [
                        "server",
                      ],
                    },
                    "tags_index": Object {
                      "colour": Array [
                        "white",
                      ],
                      "simple": Array [
                        "server",
                      ],
                    },
                    "timer": Object {
                      "run": Object {
                        "end": "2018-10-15T14:30:11.132214+00:00",
                        "start": "2018-10-15T14:30:11.010072+00:00",
                      },
                    },
                    "type": "TestCaseReport",
                    "uid": "736706ef-ba65-475d-96c5-f2855f431028",
                  },
                ],
                "logs": Array [],
                "name": "AlphaSuite",
                "name_type_index": Set {
                  "AlphaSuite|testsuite",
                  "Primary|multitest",
                  "Sample Testplan|testplan",
                  "test_equality_passing|testcase",
                },
                "status": "failed",
                "status_override": null,
                "tags": Object {
                  "simple": Array [
                    "server",
                  ],
                },
                "tags_index": Object {
                  "colour": Array [
                    "white",
                  ],
                  "simple": Array [
                    "server",
                  ],
                },
                "timer": Object {
                  "run": Object {
                    "end": "2018-10-15T14:30:11.158224+00:00",
                    "start": "2018-10-15T14:30:11.009872+00:00",
                  },
                },
                "type": "TestGroupReport",
                "uid": "cb144b10-bdb0-44d3-9170-d8016dd19ee7",
              },
            ],
            "logs": Array [],
            "name": "Primary",
            "name_type_index": Set {
              "Primary|multitest",
              "Sample Testplan|testplan",
              "AlphaSuite|testsuite",
              "test_equality_passing|testcase",
            },
            "status": "failed",
            "status_override": null,
            "tags": Object {
              "simple": Array [
                "server",
              ],
            },
            "tags_index": Object {
              "colour": Array [
                "white",
              ],
              "simple": Array [
                "server",
              ],
            },
            "timer": Object {
              "run": Object {
                "end": "2018-10-15T14:30:11.159661+00:00",
                "start": "2018-10-15T14:30:11.009705+00:00",
              },
            },
            "type": "TestGroupReport",
            "uid": "21739167-b30f-4c13-a315-ef6ae52fd1f7",
          },
        ],
        "meta": Object {},
        "name": "Sample Testplan",
        "name_type_index": Set {
          "Sample Testplan|testplan",
          "Primary|multitest",
          "AlphaSuite|testsuite",
          "test_equality_passing|testcase",
        },
        "status": "failed",
        "status_override": null,
        "tags_index": Object {
          "colour": Array [
            "white",
          ],
          "simple": Array [
            "server",
          ],
        },
        "timer": Object {
          "run": Object {
            "end": "2018-10-15T14:30:11.296158+00:00",
            "start": "2018-10-15T14:30:10.998071+00:00",
          },
        },
        "uid": "520a92e4-325e-4077-93e6-55d7091a3f83",
      }
    }
    selected={
      Array [
        Object {
          "category": "testplan",
          "entries": Array [
            Object {
              "category": "multitest",
              "description": null,
              "entries": Array [
                Object {
                  "category": "testsuite",
                  "description": null,
                  "entries": Array [
                    Object {
                      "category": "testcase",
                      "description": null,
                      "entries": Array [
                        Object {
                          "category": "DEFAULT",
                          "description": "passing equality",
                          "first": 1,
                          "label": "==",
                          "line_no": 24,
                          "machine_time": "2018-10-15T15:30:11.010098+00:00",
                          "meta_type": "assertion",
                          "passed": true,
                          "second": 1,
                          "type": "Equal",
                          "utc_time": "2018-10-15T14:30:11.010094+00:00",
                        },
                      ],
                      "logs": Array [],
                      "name": "test_equality_passing",
                      "name_type_index": Set {
                        "test_equality_passing|testcase",
                        "AlphaSuite|testsuite",
                        "Primary|multitest",
                        "Sample Testplan|testplan",
                      },
                      "status": "passed",
                      "status_override": null,
                      "tags": Object {
                        "colour": Array [
                          "white",
                        ],
                        "simple": Array [
                          "server",
                        ],
                      },
                      "tags_index": Object {
                        "colour": Array [
                          "white",
                        ],
                        "simple": Array [
                          "server",
                        ],
                      },
                      "timer": Object {
                        "run": Object {
                          "end": "2018-10-15T14:30:11.132214+00:00",
                          "start": "2018-10-15T14:30:11.010072+00:00",
                        },
                      },
                      "type": "TestCaseReport",
                      "uid": "736706ef-ba65-475d-96c5-f2855f431028",
                    },
                  ],
                  "logs": Array [],
                  "name": "AlphaSuite",
                  "name_type_index": Set {
                    "AlphaSuite|testsuite",
                    "Primary|multitest",
                    "Sample Testplan|testplan",
                    "test_equality_passing|testcase",
                  },
                  "status": "failed",
                  "status_override": null,
                  "tags": Object {
                    "simple": Array [
                      "server",
                    ],
                  },
                  "tags_index": Object {
                    "colour": Array [
                      "white",
                    ],
                    "simple": Array [
                      "server",
                    ],
                  },
                  "timer": Object {
                    "run": Object {
                      "end": "2018-10-15T14:30:11.158224+00:00",
                      "start": "2018-10-15T14:30:11.009872+00:00",
                    },
                  },
                  "type": "TestGroupReport",
                  "uid": "cb144b10-bdb0-44d3-9170-d8016dd19ee7",
                },
              ],
              "logs": Array [],
              "name": "Primary",
              "name_type_index": Set {
                "Primary|multitest",
                "Sample Testplan|testplan",
                "AlphaSuite|testsuite",
                "test_equality_passing|testcase",
              },
              "status": "failed",
              "status_override": null,
              "tags": Object {
                "simple": Array [
                  "server",
                ],
              },
              "tags_index": Object {
                "colour": Array [
                  "white",
                ],
                "simple": Array [
                  "server",
                ],
              },
              "timer": Object {
                "run": Object {
                  "end": "2018-10-15T14:30:11.159661+00:00",
                  "start": "2018-10-15T14:30:11.009705+00:00",
                },
              },
              "type": "TestGroupReport",
              "uid": "21739167-b30f-4c13-a315-ef6ae52fd1f7",
            },
          ],
          "meta": Object {},
          "name": "Sample Testplan",
          "name_type_index": Set {
            "Sample Testplan|testplan",
            "Primary|multitest",
            "AlphaSuite|testsuite",
            "test_equality_passing|testcase",
          },
          "status": "failed",
          "status_override": null,
          "tags_index": Object {
            "colour": Array [
              "white",
            ],
            "simple": Array [
              "server",
            ],
          },
          "timer": Object {
            "run": Object {
              "end": "2018-10-15T14:30:11.296158+00:00",
              "start": "2018-10-15T14:30:10.998071+00:00",
            },
          },
          "uid": "520a92e4-325e-4077-93e6-55d7091a3f83",
        },
        Object {
          "category": "multitest",
          "description": null,
          "entries": Array [
            Object {
              "category": "testsuite",
              "description": null,
              "entries": Array [
                Object {
                  "category": "testcase",
                  "description": null,
                  "entries": Array [
                    Object {
                      "category": "DEFAULT",
                      "description": "passing equality",
                      "first": 1,
                      "label": "==",
                      "line_no": 24,
                      "machine_time": "2018-10-15T15:30:11.010098+00:00",
                      "meta_type": "assertion",
                      "passed": true,
                      "second": 1,
                      "type": "Equal",
                      "utc_time": "2018-10-15T14:30:11.010094+00:00",
                    },
                  ],
                  "logs": Array [],
                  "name": "test_equality_passing",
                  "name_type_index": Set {
                    "test_equality_passing|testcase",
                    "AlphaSuite|testsuite",
                    "Primary|multitest",
                    "Sample Testplan|testplan",
                  },
                  "status": "passed",
                  "status_override": null,
                  "tags": Object {
                    "colour": Array [
                      "white",
                    ],
                    "simple": Array [
                      "server",
                    ],
                  },
                  "tags_index": Object {
                    "colour": Array [
                      "white",
                    ],
                    "simple": Array [
                      "server",
                    ],
                  },
                  "timer": Object {
                    "run": Object {
                      "end": "2018-10-15T14:30:11.132214+00:00",
                      "start": "2018-10-15T14:30:11.010072+00:00",
                    },
                  },
                  "type": "TestCaseReport",
                  "uid": "736706ef-ba65-475d-96c5-f2855f431028",
                },
              ],
              "logs": Array [],
              "name": "AlphaSuite",
              "name_type_index": Set {
                "AlphaSuite|testsuite",
                "Primary|multitest",
                "Sample Testplan|testplan",
                "test_equality_passing|testcase",
              },
              "status": "failed",
              "status_override": null,
              "tags": Object {
                "simple": Array [
                  "server",
                ],
              },
              "tags_index": Object {
                "colour": Array [
                  "white",
                ],
                "simple": Array [
                  "server",
                ],
              },
              "timer": Object {
                "run": Object {
                  "end": "2018-10-15T14:30:11.158224+00:00",
                  "start": "2018-10-15T14:30:11.009872+00:00",
                },
              },
              "type": "TestGroupReport",
              "uid": "cb144b10-bdb0-44d3-9170-d8016dd19ee7",
            },
          ],
          "logs": Array [],
          "name": "Primary",
          "name_type_index": Set {
            "Primary|multitest",
            "Sample Testplan|testplan",
            "AlphaSuite|testsuite",
            "test_equality_passing|testcase",
          },
          "status": "failed",
          "status_override": null,
          "tags": Object {
            "simple": Array [
              "server",
            ],
          },
          "tags_index": Object {
            "colour": Array [
              "white",
            ],
            "simple": Array [
              "server",
            ],
          },
          "timer": Object {
            "run": Object {
              "end": "2018-10-15T14:30:11.159661+00:00",
              "start": "2018-10-15T14:30:11.009705+00:00",
            },
          },
          "type": "TestGroupReport",
          "uid": "21739167-b30f-4c13-a315-ef6ae52fd1f7",
        },
        Object {
          "category": "testsuite",
          "description": null,
          "entries": Array [
            Object {
              "category": "testcase",
              "description": null,
              "entries": Array [
                Object {
                  "category": "DEFAULT",
                  "description": "passing equality",
                  "first": 1,
                  "label": "==",
                  "line_no": 24,
                  "machine_time": "2018-10-15T15:30:11.010098+00:00",
                  "meta_type": "assertion",
                  "passed": true,
                  "second": 1,
                  "type": "Equal",
                  "utc_time": "2018-10-15T14:30:11.010094+00:00",
                },
              ],
              "logs": Array [],
              "name": "test_equality_passing",
              "name_type_index": Set {
                "test_equality_passing|testcase",
                "AlphaSuite|testsuite",
                "Primary|multitest",
                "Sample Testplan|testplan",
              },
              "status": "passed",
              "status_override": null,
              "tags": Object {
                "colour": Array [
                  "white",
                ],
                "simple": Array [
                  "server",
                ],
              },
              "tags_index": Object {
                "colour": Array [
                  "white",
                ],
                "simple": Array [
                  "server",
                ],
              },
              "timer": Object {
                "run": Object {
                  "end": "2018-10-15T14:30:11.132214+00:00",
                  "start": "2018-10-15T14:30:11.010072+00:00",
                },
              },
              "type": "TestCaseReport",
              "uid": "736706ef-ba65-475d-96c5-f2855f431028",
            },
          ],
          "logs": Array [],
          "name": "AlphaSuite",
          "name_type_index": Set {
            "AlphaSuite|testsuite",
            "Primary|multitest",
            "Sample Testplan|testplan",
            "test_equality_passing|testcase",
          },
          "status": "failed",
          "status_override": null,
          "tags": Object {
            "simple": Array [
              "server",
            ],
          },
          "tags_index": Object {
            "colour": Array [
              "white",
            ],
            "simple": Array [
              "server",
            ],
          },
          "timer": Object {
            "run": Object {
              "end": "2018-10-15T14:30:11.158224+00:00",
              "start": "2018-10-15T14:30:11.009872+00:00",
            },
          },
          "type": "TestGroupReport",
          "uid": "cb144b10-bdb0-44d3-9170-d8016dd19ee7",
        },
      ]
    }
  />
  <Message
    left={22}
    message="Please select an entry."
  />
</div>
`;

exports[`BatchReport shallow renders the correct HTML structure when report loaded 1`] = `
<BatchReport
  match={
    Object {
      "params": Object {
        "uid": "123",
      },
    }
  }
  skipFetch={true}
>
  <ReportStateProvider>
    <AppStateProvider
      key=".0"
    >
      <Router
        history={
          Object {
            "action": "POP",
            "block": [Function],
            "createHref": [Function],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          }
        }
      >
        <BatchReportStartup
          browserProps={
            Object {
              "history": undefined,
              "location": undefined,
              "match": Object {
                "params": Object {
                  "uid": "123",
                },
              },
            }
          }
          skipFetch={true}
        >
          <div
            className="batchReport_3hmsj"
          >
            <Toolbar>
              <div>
                <TopNavbar>
                  <Navbar
                    className="toolbar_l6n5rs"
                    expand="md"
                    light={true}
                    tag="nav"
                  >
                    <nav
                      className="toolbar_l6n5rs navbar navbar-expand-md navbar-light"
                    >
                      <div
                        className="filterBox_1kzbnzj"
                      >
                        <FilterBox>
                          <div
                            className="searchBox_1yfus1e"
                            style={
                              Object {
                                "width": "22em",
                              }
                            }
                          >
                            <input
                              className="searchBoxInput_kcbf9x"
                              placeholder=" Filter"
                              type="text"
                            />
                          </div>
                        </FilterBox>
                      </div>
                      <Collapse
                        appear={false}
                        className="toolbar_l6n5rs-o_O-toolbarUnknown_1mqui2p"
                        enter={true}
                        exit={true}
                        in={false}
                        isOpen={false}
                        mountOnEnter={false}
                        navbar={true}
                        onEnter={[Function]}
                        onEntered={[Function]}
                        onEntering={[Function]}
                        onExit={[Function]}
                        onExited={[Function]}
                        onExiting={[Function]}
                        tag="div"
                        timeout={350}
                        unmountOnExit={false}
                      >
                        <Transition
                          appear={false}
                          enter={true}
                          exit={true}
                          in={false}
                          mountOnEnter={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExited={[Function]}
                          onExiting={[Function]}
                          timeout={350}
                          unmountOnExit={false}
                        >
                          <div
                            className="toolbar_l6n5rs-o_O-toolbarUnknown_1mqui2p collapse navbar-collapse"
                            style={Object {}}
                          >
                            <Nav
                              className="ml-auto"
                              navbar={true}
                              tag="ul"
                              vertical={false}
                            >
                              <ul
                                className="ml-auto navbar-nav"
                              >
                                <InfoButton>
                                  <NavItem
                                    tag="li"
                                  >
                                    <li
                                      className="nav-item"
                                    >
                                      <div
                                        className="buttonsBar_13xq1v"
                                      >
                                        <span
                                          onClick={[Function]}
                                        >
                                          <FontAwesomeIcon
                                            border={false}
                                            className="toolbarButton_z1gq62"
                                            fixedWidth={false}
                                            flip={null}
                                            icon="info"
                                            inverse={false}
                                            key="toolbar-info"
                                            listItem={false}
                                            mask={null}
                                            pull={null}
                                            pulse={false}
                                            rotation={null}
                                            size={null}
                                            spin={false}
                                            symbol={false}
                                            title="Info"
                                            transform={null}
                                          >
                                            <svg
                                              aria-labelledby="svg-inline--fa-title-7"
                                              className="svg-inline--fa fa-info fa-w-6 toolbarButton_z1gq62"
                                              data-icon="info"
                                              data-prefix="fas"
                                              role="img"
                                              style={Object {}}
                                              viewBox="0 0 192 512"
                                              xmlns="http://www.w3.org/2000/svg"
                                            >
                                              <title
                                                id="svg-inline--fa-title-7"
                                                style={Object {}}
                                              >
                                                Info
                                              </title>
                                              <path
                                                d="M20 424.229h20V279.771H20c-11.046 0-20-8.954-20-20V212c0-11.046 8.954-20 20-20h112c11.046 0 20 8.954 20 20v212.229h20c11.046 0 20 8.954 20 20V492c0 11.046-8.954 20-20 20H20c-11.046 0-20-8.954-20-20v-47.771c0-11.046 8.954-20 20-20zM96 0C56.235 0 24 32.235 24 72s32.235 72 72 72 72-32.235 72-72S135.764 0 96 0z"
                                                fill="currentColor"
                                                style={Object {}}
                                              />
                                            </svg>
                                          </FontAwesomeIcon>
                                        </span>
                                      </div>
                                    </li>
                                  </NavItem>
                                </InfoButton>
                                <FilterButton
                                  toolbarStyle="toolbar_l6n5rs-o_O-toolbarUnknown_1mqui2p"
                                >
                                  <UncontrolledDropdown
                                    inNavbar={true}
                                    nav={true}
                                  >
                                    <Dropdown
                                      active={false}
                                      addonType={false}
                                      direction="down"
                                      inNavbar={true}
                                      isOpen={false}
                                      nav={true}
                                      setActiveFromChild={false}
                                      toggle={[Function]}
                                    >
                                      <Manager
                                        className="dropdown nav-item"
                                        onKeyDown={[Function]}
                                        tag="li"
                                      >
                                        <li
                                          className="dropdown nav-item"
                                          onKeyDown={[Function]}
                                        >
                                          <div
                                            className="buttonsBar_13xq1v"
                                          >
                                            <DropdownToggle
                                              aria-haspopup={true}
                                              className="toolbar_l6n5rs-o_O-toolbarUnknown_1mqui2p"
                                              color="secondary"
                                              nav={true}
                                            >
                                              <a
                                                aria-expanded={false}
                                                aria-haspopup={true}
                                                className="toolbar_l6n5rs-o_O-toolbarUnknown_1mqui2p nav-link"
                                                href="#"
                                                onClick={[Function]}
                                              >
                                                <FontAwesomeIcon
                                                  border={false}
                                                  className="toolbarButton_z1gq62"
                                                  fixedWidth={false}
                                                  flip={null}
                                                  icon="filter"
                                                  inverse={false}
                                                  key="toolbar-filter"
                                                  listItem={false}
                                                  mask={null}
                                                  pull={null}
                                                  pulse={false}
                                                  rotation={null}
                                                  size={null}
                                                  spin={false}
                                                  symbol={false}
                                                  title="Choose filter"
                                                  transform={null}
                                                >
                                                  <svg
                                                    aria-labelledby="svg-inline--fa-title-2"
                                                    className="svg-inline--fa fa-filter fa-w-16 toolbarButton_z1gq62"
                                                    data-icon="filter"
                                                    data-prefix="fas"
                                                    role="img"
                                                    style={Object {}}
                                                    viewBox="0 0 512 512"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <title
                                                      id="svg-inline--fa-title-2"
                                                      style={Object {}}
                                                    >
                                                      Choose filter
                                                    </title>
                                                    <path
                                                      d="M487.976 0H24.028C2.71 0-8.047 25.866 7.058 40.971L192 225.941V432c0 7.831 3.821 15.17 10.237 19.662l80 55.98C298.02 518.69 320 507.493 320 487.98V225.941l184.947-184.97C520.021 25.896 509.338 0 487.976 0z"
                                                      fill="currentColor"
                                                      style={Object {}}
                                                    />
                                                  </svg>
                                                </FontAwesomeIcon>
                                              </a>
                                            </DropdownToggle>
                                          </div>
                                          <DropdownMenu
                                            className="filterDropdown_biw13d"
                                            flip={true}
                                            tag="div"
                                          >
                                            <div
                                              aria-hidden={true}
                                              className="filterDropdown_biw13d dropdown-menu"
                                              role="menu"
                                              tabIndex="-1"
                                            >
                                              <FilterRadioButton
                                                label="All"
                                                value="all"
                                              >
                                                <DropdownItem
                                                  className="dropdownItem_1bl0z5g"
                                                  tag="button"
                                                  toggle={false}
                                                >
                                                  <button
                                                    className="dropdownItem_1bl0z5g dropdown-item"
                                                    onClick={[Function]}
                                                    tabIndex="0"
                                                  >
                                                    <Label
                                                      check={true}
                                                      className="filterLabel_1r0c7l6"
                                                      tag="label"
                                                      widths={
                                                        Array [
                                                          "xs",
                                                          "sm",
                                                          "md",
                                                          "lg",
                                                          "xl",
                                                        ]
                                                      }
                                                    >
                                                      <label
                                                        className="filterLabel_1r0c7l6 form-check-label"
                                                      >
                                                        <Input
                                                          checked={true}
                                                          name="filter"
                                                          onChange={[Function]}
                                                          type="radio"
                                                          value="all"
                                                        >
                                                          <input
                                                            checked={true}
                                                            className="form-check-input"
                                                            name="filter"
                                                            onChange={[Function]}
                                                            type="radio"
                                                            value="all"
                                                          />
                                                        </Input>
                                                         All
                                                      </label>
                                                    </Label>
                                                  </button>
                                                </DropdownItem>
                                              </FilterRadioButton>
                                              <FilterRadioButton
                                                label="Failed only"
                                                value="fail"
                                              >
                                                <DropdownItem
                                                  className="dropdownItem_1bl0z5g"
                                                  tag="button"
                                                  toggle={false}
                                                >
                                                  <button
                                                    className="dropdownItem_1bl0z5g dropdown-item"
                                                    onClick={[Function]}
                                                    tabIndex="0"
                                                  >
                                                    <Label
                                                      check={true}
                                                      className="filterLabel_1r0c7l6"
                                                      tag="label"
                                                      widths={
                                                        Array [
                                                          "xs",
                                                          "sm",
                                                          "md",
                                                          "lg",
                                                          "xl",
                                                        ]
                                                      }
                                                    >
                                                      <label
                                                        className="filterLabel_1r0c7l6 form-check-label"
                                                      >
                                                        <Input
                                                          checked={false}
                                                          name="filter"
                                                          onChange={[Function]}
                                                          type="radio"
                                                          value="fail"
                                                        >
                                                          <input
                                                            checked={false}
                                                            className="form-check-input"
                                                            name="filter"
                                                            onChange={[Function]}
                                                            type="radio"
                                                            value="fail"
                                                          />
                                                        </Input>
                                                         Failed only
                                                      </label>
                                                    </Label>
                                                  </button>
                                                </DropdownItem>
                                              </FilterRadioButton>
                                              <FilterRadioButton
                                                label="Passed only"
                                                value="pass"
                                              >
                                                <DropdownItem
                                                  className="dropdownItem_1bl0z5g"
                                                  tag="button"
                                                  toggle={false}
                                                >
                                                  <button
                                                    className="dropdownItem_1bl0z5g dropdown-item"
                                                    onClick={[Function]}
                                                    tabIndex="0"
                                                  >
                                                    <Label
                                                      check={true}
                                                      className="filterLabel_1r0c7l6"
                                                      tag="label"
                                                      widths={
                                                        Array [
                                                          "xs",
                                                          "sm",
                                                          "md",
                                                          "lg",
                                                          "xl",
                                                        ]
                                                      }
                                                    >
                                                      <label
                                                        className="filterLabel_1r0c7l6 form-check-label"
                                                      >
                                                        <Input
                                                          checked={false}
                                                          name="filter"
                                                          onChange={[Function]}
                                                          type="radio"
                                                          value="pass"
                                                        >
                                                          <input
                                                            checked={false}
                                                            className="form-check-input"
                                                            name="filter"
                                                            onChange={[Function]}
                                                            type="radio"
                                                            value="pass"
                                                          />
                                                        </Input>
                                                         Passed only
                                                      </label>
                                                    </Label>
                                                  </button>
                                                </DropdownItem>
                                              </FilterRadioButton>
                                              <DropdownItem
                                                divider={true}
                                                tag="button"
                                                toggle={true}
                                              >
                                                <div
                                                  className="dropdown-divider"
                                                  onClick={[Function]}
                                                  tabIndex="-1"
                                                />
                                              </DropdownItem>
                                              <DisplayEmptyCheckBox
                                                label="Hide empty testcase"
                                              >
                                                <DropdownItem
                                                  className="dropdownItem_1bl0z5g"
                                                  tag="button"
                                                  toggle={false}
                                                >
                                                  <button
                                                    className="dropdownItem_1bl0z5g dropdown-item"
                                                    onClick={[Function]}
                                                    tabIndex="0"
                                                  >
                                                    <Label
                                                      check={true}
                                                      className="filterLabel_1r0c7l6"
                                                      tag="label"
                                                      widths={
                                                        Array [
                                                          "xs",
                                                          "sm",
                                                          "md",
                                                          "lg",
                                                          "xl",
                                                        ]
                                                      }
                                                    >
                                                      <label
                                                        className="filterLabel_1r0c7l6 form-check-label"
                                                      >
                                                        <Input
                                                          checked={false}
                                                          name="displayEmpty"
                                                          onChange={[Function]}
                                                          type="checkbox"
                                                        >
                                                          <input
                                                            checked={false}
                                                            className="form-check-input"
                                                            name="displayEmpty"
                                                            onChange={[Function]}
                                                            type="checkbox"
                                                          />
                                                        </Input>
                                                         Hide empty testcase
                                                      </label>
                                                    </Label>
                                                  </button>
                                                </DropdownItem>
                                              </DisplayEmptyCheckBox>
                                            </div>
                                          </DropdownMenu>
                                        </li>
                                      </Manager>
                                    </Dropdown>
                                  </UncontrolledDropdown>
                                </FilterButton>
                                <PrintButton>
                                  <NavItem
                                    tag="li"
                                  >
                                    <li
                                      className="nav-item"
                                    >
                                      <div
                                        className="buttonsBar_13xq1v"
                                      >
                                        <span
                                          onClick={[Function]}
                                        >
                                          <FontAwesomeIcon
                                            border={false}
                                            className="toolbarButton_z1gq62"
                                            fixedWidth={false}
                                            flip={null}
                                            icon="print"
                                            inverse={false}
                                            key="toolbar-print"
                                            listItem={false}
                                            mask={null}
                                            pull={null}
                                            pulse={false}
                                            rotation={null}
                                            size={null}
                                            spin={false}
                                            symbol={false}
                                            title="Print page"
                                            transform={null}
                                          >
                                            <svg
                                              aria-labelledby="svg-inline--fa-title-3"
                                              className="svg-inline--fa fa-print fa-w-16 toolbarButton_z1gq62"
                                              data-icon="print"
                                              data-prefix="fas"
                                              role="img"
                                              style={Object {}}
                                              viewBox="0 0 512 512"
                                              xmlns="http://www.w3.org/2000/svg"
                                            >
                                              <title
                                                id="svg-inline--fa-title-3"
                                                style={Object {}}
                                              >
                                                Print page
                                              </title>
                                              <path
                                                d="M464 192h-16V81.941a24 24 0 0 0-7.029-16.97L383.029 7.029A24 24 0 0 0 366.059 0H88C74.745 0 64 10.745 64 24v168H48c-26.51 0-48 21.49-48 48v132c0 6.627 5.373 12 12 12h52v104c0 13.255 10.745 24 24 24h336c13.255 0 24-10.745 24-24V384h52c6.627 0 12-5.373 12-12V240c0-26.51-21.49-48-48-48zm-80 256H128v-96h256v96zM128 224V64h192v40c0 13.2 10.8 24 24 24h40v96H128zm304 72c-13.254 0-24-10.746-24-24s10.746-24 24-24 24 10.746 24 24-10.746 24-24 24z"
                                                fill="currentColor"
                                                style={Object {}}
                                              />
                                            </svg>
                                          </FontAwesomeIcon>
                                        </span>
                                      </div>
                                    </li>
                                  </NavItem>
                                </PrintButton>
                                <TagsButton>
                                  <NavItem
                                    tag="li"
                                  >
                                    <li
                                      className="nav-item"
                                    >
                                      <div
                                        className="buttonsBar_13xq1v"
                                      >
                                        <span
                                          onClick={[Function]}
                                        >
                                          <FontAwesomeIcon
                                            border={false}
                                            className="toolbarButton_z1gq62"
                                            fixedWidth={false}
                                            flip={null}
                                            icon="tags"
                                            inverse={false}
                                            key="toolbar-tags"
                                            listItem={false}
                                            mask={null}
                                            pull={null}
                                            pulse={false}
                                            rotation={null}
                                            size={null}
                                            spin={false}
                                            symbol={false}
                                            title="Toggle tags"
                                            transform={null}
                                          >
                                            <svg
                                              aria-labelledby="svg-inline--fa-title-8"
                                              className="svg-inline--fa fa-tags fa-w-20 toolbarButton_z1gq62"
                                              data-icon="tags"
                                              data-prefix="fas"
                                              role="img"
                                              style={Object {}}
                                              viewBox="0 0 640 512"
                                              xmlns="http://www.w3.org/2000/svg"
                                            >
                                              <title
                                                id="svg-inline--fa-title-8"
                                                style={Object {}}
                                              >
                                                Toggle tags
                                              </title>
                                              <path
                                                d="M497.941 225.941L286.059 14.059A48 48 0 0 0 252.118 0H48C21.49 0 0 21.49 0 48v204.118a48 48 0 0 0 14.059 33.941l211.882 211.882c18.744 18.745 49.136 18.746 67.882 0l204.118-204.118c18.745-18.745 18.745-49.137 0-67.882zM112 160c-26.51 0-48-21.49-48-48s21.49-48 48-48 48 21.49 48 48-21.49 48-48 48zm513.941 133.823L421.823 497.941c-18.745 18.745-49.137 18.745-67.882 0l-.36-.36L527.64 323.522c16.999-16.999 26.36-39.6 26.36-63.64s-9.362-46.641-26.36-63.64L331.397 0h48.721a48 48 0 0 1 33.941 14.059l211.882 211.882c18.745 18.745 18.745 49.137 0 67.882z"
                                                fill="currentColor"
                                                style={Object {}}
                                              />
                                            </svg>
                                          </FontAwesomeIcon>
                                        </span>
                                      </div>
                                    </li>
                                  </NavItem>
                                </TagsButton>
                                <HelpButton>
                                  <NavItem
                                    tag="li"
                                  >
                                    <li
                                      className="nav-item"
                                    >
                                      <div
                                        className="buttonsBar_13xq1v"
                                      >
                                        <span
                                          onClick={[Function]}
                                        >
                                          <FontAwesomeIcon
                                            border={false}
                                            className="toolbarButton_z1gq62"
                                            fixedWidth={false}
                                            flip={null}
                                            icon="question-circle"
                                            inverse={false}
                                            key="toolbar-question"
                                            listItem={false}
                                            mask={null}
                                            pull={null}
                                            pulse={false}
                                            rotation={null}
                                            size={null}
                                            spin={false}
                                            symbol={false}
                                            title="Help"
                                            transform={null}
                                          >
                                            <svg
                                              aria-labelledby="svg-inline--fa-title-9"
                                              className="svg-inline--fa fa-question-circle fa-w-16 toolbarButton_z1gq62"
                                              data-icon="question-circle"
                                              data-prefix="fas"
                                              role="img"
                                              style={Object {}}
                                              viewBox="0 0 512 512"
                                              xmlns="http://www.w3.org/2000/svg"
                                            >
                                              <title
                                                id="svg-inline--fa-title-9"
                                                style={Object {}}
                                              >
                                                Help
                                              </title>
                                              <path
                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                fill="currentColor"
                                                style={Object {}}
                                              />
                                            </svg>
                                          </FontAwesomeIcon>
                                        </span>
                                      </div>
                                    </li>
                                  </NavItem>
                                </HelpButton>
                                <DocumentationButton>
                                  <NavItem
                                    tag="li"
                                  >
                                    <li
                                      className="nav-item"
                                    >
                                      <a
                                        className="buttonsBar_13xq1v"
                                        href="http://testplan.readthedocs.io"
                                        rel="noopener noreferrer"
                                        target="_blank"
                                      >
                                        <FontAwesomeIcon
                                          border={false}
                                          className="toolbarButton_z1gq62"
                                          fixedWidth={false}
                                          flip={null}
                                          icon="book"
                                          inverse={false}
                                          key="toolbar-document"
                                          listItem={false}
                                          mask={null}
                                          pull={null}
                                          pulse={false}
                                          rotation={null}
                                          size={null}
                                          spin={false}
                                          symbol={false}
                                          title="Documentation"
                                          transform={null}
                                        >
                                          <svg
                                            aria-labelledby="svg-inline--fa-title-10"
                                            className="svg-inline--fa fa-book fa-w-14 toolbarButton_z1gq62"
                                            data-icon="book"
                                            data-prefix="fas"
                                            role="img"
                                            style={Object {}}
                                            viewBox="0 0 448 512"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <title
                                              id="svg-inline--fa-title-10"
                                              style={Object {}}
                                            >
                                              Documentation
                                            </title>
                                            <path
                                              d="M448 360V24c0-13.3-10.7-24-24-24H96C43 0 0 43 0 96v320c0 53 43 96 96 96h328c13.3 0 24-10.7 24-24v-16c0-7.5-3.5-14.3-8.9-18.7-4.2-15.4-4.2-59.3 0-74.7 5.4-4.3 8.9-11.1 8.9-18.6zM128 134c0-3.3 2.7-6 6-6h212c3.3 0 6 2.7 6 6v20c0 3.3-2.7 6-6 6H134c-3.3 0-6-2.7-6-6v-20zm0 64c0-3.3 2.7-6 6-6h212c3.3 0 6 2.7 6 6v20c0 3.3-2.7 6-6 6H134c-3.3 0-6-2.7-6-6v-20zm253.4 250H96c-17.7 0-32-14.3-32-32 0-17.6 14.4-32 32-32h285.4c-1.9 17.1-1.9 46.9 0 64z"
                                              fill="currentColor"
                                              style={Object {}}
                                            />
                                          </svg>
                                        </FontAwesomeIcon>
                                      </a>
                                    </li>
                                  </NavItem>
                                </DocumentationButton>
                              </ul>
                            </Nav>
                          </div>
                        </Transition>
                      </Collapse>
                    </nav>
                  </Navbar>
                </TopNavbar>
                <HelpModal>
                  <Modal
                    autoFocus={true}
                    backdrop={true}
                    backdropTransition={
                      Object {
                        "mountOnEnter": true,
                        "timeout": 150,
                      }
                    }
                    centered={false}
                    className="HelpModal"
                    fade={true}
                    isOpen={false}
                    keyboard={true}
                    modalTransition={
                      Object {
                        "timeout": 300,
                      }
                    }
                    onClosed={[Function]}
                    onOpened={[Function]}
                    role="dialog"
                    toggle={[Function]}
                    zIndex={1050}
                  />
                </HelpModal>
                <InfoModal>
                  <Modal
                    autoFocus={true}
                    backdrop={true}
                    backdropTransition={
                      Object {
                        "mountOnEnter": true,
                        "timeout": 150,
                      }
                    }
                    centered={false}
                    className="infoModal"
                    fade={true}
                    isOpen={false}
                    keyboard={true}
                    modalTransition={
                      Object {
                        "timeout": 300,
                      }
                    }
                    onClosed={[Function]}
                    onOpened={[Function]}
                    role="dialog"
                    size="lg"
                    toggle={[Function]}
                    zIndex={1050}
                  />
                </InfoModal>
              </div>
            </Toolbar>
            <NavPanes>
              <EmptyListGroupItem>
                <ListGroupItem
                  className="navButton_1x055n9"
                  tag="li"
                >
                  <li
                    className="navButton_1x055n9 list-group-item"
                  >
                    No entries to display...
                  </li>
                </ListGroupItem>
              </EmptyListGroupItem>
            </NavPanes>
            <CenterPane>
              <Message
                left={22}
                message="Please select an entry."
              >
                <div
                  style={
                    Object {
                      "paddingLeft": "22em",
                      "paddingTop": "4.5em",
                    }
                  }
                >
                  <h1
                    className="message_110xrpz"
                  >
                    Please select an entry.
                  </h1>
                </div>
              </Message>
            </CenterPane>
          </div>
        </BatchReportStartup>
      </Router>
    </AppStateProvider>
  </ReportStateProvider>
</BatchReport>
`;
